name: Update products.json from Baserow (angepasst)

on:
  schedule:
    - cron: "0 * * * *"   # stÃ¼ndlich
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch public CSV export from Baserow
        run: |
          set -e
          SLUG="uSOIDTc6fT_AkuuyIc-wYUQCgD1XCz0SMM3k8MVQ-OA"
          URL="https://db.pflugsmuehle.de/public/grid/${SLUG}/export/?format=csv"
          echo "Fetching: $URL"
          curl -sSL -o raw_baserow.csv "$URL"
          head -n 5 raw_baserow.csv || true

      - name: Map CSV -> products.json (genau deine Spalten)
        run: |
          set -e
          node - <<'EOF'
          const fs = require('fs');

          function parseCSV(text) {
            const first = (text.split(/\r?\n/)[0]||'');
            let d = ';'; const c = (first.match(/,/g)||[]).length; const s = (first.match(/;/g)||[]).length;
            if (c > s) d = ',';
            const rows=[]; let f='', q=false, r=[];
            for (let i=0;i<text.length;i++){
              const ch=text[i];
              if(q){
                if(ch === '"'){
                  if(text[i+1] === '"'){ f+='"'; i++; } else { q=false; }
                } else f+=ch;
              }else{
                if(ch === '"') q=true;
                else if(ch === d){ r.push(f); f=''; }
                else if(ch === '\r'){ }
                else if(ch === '\n'){ r.push(f); rows.push(r); r=[]; f=''; }
                else f+=ch;
              }
            }
            if(f.length || r.length){ r.push(f); rows.push(r); }
            return rows;
          }

          function toNum(v){
            if(v==null) return 0;
            const s = String(v).trim().replace(/\./g,'').replace(',','.');
            const n = Number(s);
            return isNaN(n) ? 0 : n;
          }

          const csv = fs.readFileSync('raw_baserow.csv','utf8').trim();
          const table = parseCSV(csv);
          const header = table[0].map(h=>h.trim());

          // Exakt deine Spalten
          const iId   = header.indexOf('ID');
          const iName = header.indexOf('Name');
          const iBrut = header.indexOf('Bruttopreis');
          const iMwst = header.indexOf('MwSt-Satz');

          const out=[];
          for(let r=1;r<table.length;r++){
            const row = table[r];
            if(!row || !row.length) continue;
            const name = (row[iName]||'').toString().trim();
            if(!name) continue;
            out.push({
              id: (row[iId]||'').toString().trim() || String(r),
              name,
              price_gross: toNum(row[iBrut]),
              vat_rate: toNum(row[iMwst]),
            });
          }

          fs.writeFileSync('products.json', JSON.stringify(out, null, 2));
          console.log('Geschrieben: products.json (Artikel:', out.length, ')');
          EOF

      - name: Commit changes (if any)
        run: |
          if git diff --quiet -- products.json; then
            echo "No changes in products.json"
          else
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add products.json
            git commit -m "Update products.json aus Baserow (angepasst auf Spalten)"
            git push
          fi
